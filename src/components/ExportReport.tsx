import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { FileText, Download, Trophy, Target, User } from "lucide-react";

interface ExportReportProps {
  children: React.ReactNode;
}

export const ExportReport = ({ children }: ExportReportProps) => {
  const [isOpen, setIsOpen] = useState(false);

  // Mock data for the report
  const reportData = {
    teamAverage: 61,
    bestPlayer: { name: "Arjun", score: 75 },
    worstPlayer: { name: "Vikram", score: 45 },
    assessmentDate: new Date().toLocaleDateString(),
    totalPlayers: 3,
    recommendations: [
      "Implement daily breathing exercises for all players",
      "Focus on confidence building sessions for Vikram", 
      "Continue positive reinforcement for Arjun",
      "Team visualization sessions before matches"
    ]
  };

  const generateReport = () => {
    // Create a styled HTML content for the report
    const reportHTML = `
      <!DOCTYPE html>
      <html>
        <head>
          <title>Cricket Coach Mental Ability Report</title>
          <style>
            body { font-family: Arial, sans-serif; margin: 40px; background: #f8fafc; }
            .header { text-align: center; margin-bottom: 30px; padding: 20px; background: linear-gradient(135deg, #22c55e, #16a34a); color: white; border-radius: 10px; }
            .stats-grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; margin-bottom: 30px; }
            .stat-card { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); text-align: center; }
            .player-section { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); margin-bottom: 20px; }
            .recommendations { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); }
            .score { font-size: 24px; font-weight: bold; color: #22c55e; }
            .date { color: #64748b; font-size: 14px; }
            .recommendation-item { padding: 10px; margin: 5px 0; background: #f1f5f9; border-radius: 5px; border-left: 4px solid #22c55e; }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>Cricket Coach Mental Ability Report</h1>
            <p class="date">Generated on ${reportData.assessmentDate}</p>
          </div>
          
          <div class="stats-grid">
            <div class="stat-card">
              <h3>Team Average</h3>
              <div class="score">${reportData.teamAverage}%</div>
            </div>
            <div class="stat-card">
              <h3>Best Performer</h3>
              <div class="score">${reportData.bestPlayer.name}</div>
              <p>${reportData.bestPlayer.score}%</p>
            </div>
            <div class="stat-card">
              <h3>Total Players</h3>
              <div class="score">${reportData.totalPlayers}</div>
            </div>
          </div>

          <div class="player-section">
            <h3>Individual Performance</h3>
            <p><strong>Rahul:</strong> 63% - Shows good mental resilience with room for improvement in pressure situations.</p>
            <p><strong>Arjun:</strong> 75% - Excellent performance, natural leader with strong confidence levels.</p>
            <p><strong>Vikram:</strong> 45% - Requires focused attention and confidence building exercises.</p>
          </div>

          <div class="recommendations">
            <h3>Recommended Action Plan</h3>
            ${reportData.recommendations.map(rec => `<div class="recommendation-item">${rec}</div>`).join('')}
          </div>

          <div style="text-align: center; margin-top: 30px; color: #64748b; font-size: 12px;">
            Cricket Coach Mental Ability Prototype - Generated by Lovable
          </div>
        </body>
      </html>
    `;

    // Open in new window
    const newWindow = window.open('', '_blank');
    if (newWindow) {
      newWindow.document.write(reportHTML);
      newWindow.document.close();
    }
  };

  return (
    <Dialog open={isOpen} onOpenChange={setIsOpen}>
      <DialogTrigger asChild>
        {children}
      </DialogTrigger>
      <DialogContent className="max-w-md">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <FileText size={20} />
            Export Report
          </DialogTitle>
        </DialogHeader>
        
        <div className="space-y-4">
          <Card>
            <CardHeader className="pb-3">
              <CardTitle className="text-lg">Report Preview</CardTitle>
            </CardHeader>
            <CardContent className="space-y-3">
              <div className="flex items-center justify-between">
                <span className="text-sm text-muted-foreground">Team Average</span>
                <Badge className="bg-gradient-field">{reportData.teamAverage}%</Badge>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm text-muted-foreground">Best Player</span>
                <div className="flex items-center gap-1">
                  <Trophy size={14} className="text-warning" />
                  <span className="text-sm font-medium">{reportData.bestPlayer.name}</span>
                </div>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm text-muted-foreground">Total Players</span>
                <div className="flex items-center gap-1">
                  <User size={14} className="text-primary" />
                  <span className="text-sm font-medium">{reportData.totalPlayers}</span>
                </div>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm text-muted-foreground">Recommendations</span>
                <div className="flex items-center gap-1">
                  <Target size={14} className="text-secondary" />
                  <span className="text-sm font-medium">{reportData.recommendations.length}</span>
                </div>
              </div>
            </CardContent>
          </Card>

          <div className="flex gap-2">
            <Button 
              onClick={generateReport}
              className="flex-1 bg-gradient-field hover:opacity-90"
            >
              <Download size={16} className="mr-2" />
              Generate Report
            </Button>
            <Button 
              variant="outline" 
              onClick={() => setIsOpen(false)}
              className="flex-1"
            >
              Cancel
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};